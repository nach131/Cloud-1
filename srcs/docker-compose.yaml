x-web_base: &web_base
  image: web_base:1.1.0
  build:
    context: ./requirements/web    # Imagen base personalizada (usa nginx:latest si no existe)
  restart: unless-stopped
  expose:
    - "80"
  depends_on:
    - proxy
    - letsencrypt
  networks:
    - cloud

services:

  mariadb:
    image: mariadb:10.11
    container_name: ${PMA_HOST}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${WORDPRESS_DB_NAME}
      MYSQL_USER: ${WORDPRESS_DB_USER}
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD}
    # ports:
    #   - "3306:3306"  # ⚠️ Eliminarlo en producción)
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - cloud

  proxy:
    image: jwilder/nginx-proxy:1.8
    # image: nginxproxy/nginx-proxy:alpine
    container_name: proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      # Desactiva reloads excesivos por pequeños cambios
      - ENABLE_IPV6=false
      - RESOLVERS=1.1.1.1 8.8.8.8
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs-data:/etc/nginx/certs:ro
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
      - ${TOMA}/data/logs/proxy:/var/log/nginx
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
    networks:
      - cloud

  logrotate:
    build:
      context: ./requirements/logrotate
    image: logrotate:1.0.1
    container_name: logrotate
    volumes:
      - ${TOMA}/data/logs/proxy:/var/log/nginx
    restart: always
    networks:
      - cloud

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:2.6.1
    # image: nginxproxy/acme-companion
    container_name: letsencrypt
    restart: unless-stopped
    environment:
      NGINX_PROXY_CONTAINER: proxy
      # ACME_CA_URI: https://acme-staging-v02.api.letsencrypt.org/directory # ⚠️ para las pruebas
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs-data:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - acme:/etc/acme.sh
    networks:
      - cloud

  wordpress:
    image: wordpress:6.8.3-php8.3-apache
    container_name: wordpress
    depends_on:
      - ${PMA_HOST}
    environment:
      WORDPRESS_DB_HOST: ${PMA_HOST}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
      VIRTUAL_HOST: ${DOMAIN},www.${DOMAIN}
      LETSENCRYPT_HOST: ${DOMAIN},www.${DOMAIN}
      DOMAIN: ${DOMAIN}
      LETSENCRYPT_EMAIL: nacho@enunpimpam.com
    expose:
      - "80"
    volumes:
      - wp_files:/var/www/html
    networks:
      - cloud

  web-nasa:
    <<: *web_base
    container_name: web-nasa
    environment:
      VIRTUAL_HOST: ${NASA}.${DOMAIN},www.${NASA}.${DOMAIN}
      LETSENCRYPT_HOST: ${NASA}.${DOMAIN},www.${NASA}.${DOMAIN}
      DOMAIN: ${NASA}
      LETSENCRYPT_EMAIL: nacho@enunpimpam.com
    volumes:
      - www-nasa:/usr/share/nginx/html:ro
      - ${TOMA}/data/logs/nasa:/var/log/nginx

  phpmyadmin:
    image: phpmyadmin:5.2.3
    container_name: phpmyadmin
    restart: always
    depends_on:
      - ${PMA_HOST}
    environment:
      PMA_HOST: ${PMA_HOST}
      # - PMA_USER=${WORDPRESS_DB_USER}
      # - PMA_PASSWORD=${WORDPRESS_DB_PASSWORD}
      UPLOAD_LIMIT: 512M
      VIRTUAL_HOST: ${PHPMYADMIN}.${DOMAIN},www.${PHPMYADMIN}.${DOMAIN}
      LETSENCRYPT_HOST: ${PHPMYADMIN}.${DOMAIN},www.${PHPMYADMIN}.${DOMAIN}
      LETSENCRYPT_EMAIL: nacho@enunpimpam.com
    expose:
      - "80"
    networks:
      - cloud

volumes:
  vhostd:
  acme:
  html:
  certs-data:
    driver: local
    driver_opts:
      type: none
      device: ${TOMA}/data/certs
      o: bind

  dbdata:
    driver: local
    driver_opts:
      type: none
      device: ${TOMA}/data/mysql
      o: bind

  wp_files:
    driver: local
    driver_opts:
      type: none
      device: ${TOMA}/data/wordpress
      o: bind

  www-nasa:
    driver: local
    driver_opts:
      type: none
      device: ${TOMA}/data/nasa
      o: bind

networks:
  cloud:
    driver: bridge


# docker inspect phpmyadmin:latest | grep -i version

# docker exec proxy bash -c "cat /etc/nginx/conf.d/default.conf | grep phpmyadmin"